{
  "name": "trustless-work-nextjs-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "eslint --fix .",
    "lint:check": "eslint .",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "code-quality": "npm run lint:check && npm run format:check && npm run type-check",
    "code-quality:fix": "npm run lint:fix && npm run format",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "cypress run",
    "test:e2e:open": "cypress open",
    "test:all": "npm run test:coverage && npm run test:e2e",
    "purge-css": "node scripts/purge-css.js",
    "optimize-css": "npm run purge-css && npm run format",
    "prepare": "husky || true",
    "check": "npm run code-quality && npm run test",
    "check:fix": "npm run code-quality:fix && npm run test",
    "env:check": "node -e \"console.log('üîç Environment Status:'); console.log('üìä Public variables:', Object.keys(process.env).filter(k => k.startsWith('NEXT_PUBLIC_')).length); console.log('üîê Server variables:', Object.keys(process.env).filter(k => !k.startsWith('NEXT_PUBLIC_')).length); console.log('‚úÖ Environment check completed')\"",
    "env:setup": "cp env.example .env.local && echo '‚úÖ Environment file created from template' && echo 'üìù Edit .env.local with your values'",
    "env:validate": "node -e \"console.log('‚úÖ Environment validation will be checked on app startup')\"",
    "test:unit": "jest --testPathPatterns='__tests__/.*\\.test\\.(ts|tsx|js|jsx)$'",
    "test:unit:watch": "jest --testPathPatterns='__tests__/.*\\.test\\.(ts|tsx|js|jsx)$' --watch",
    "test:components": "jest --testPathPatterns='components/.*\\.test\\.(ts|tsx|js|jsx)$'",
    "test:components:watch": "jest --testPathPatterns='components/.*\\.test\\.(ts|tsx|js|jsx)$' --watch",
    "test:lib": "jest --testPathPatterns='lib/.*\\.test\\.(ts|tsx|js|jsx)$'",
    "test:lib:watch": "jest --testPathPatterns='lib/.*\\.test\\.(ts|tsx|js|jsx)$' --watch",
    "test:coverage:html": "jest --coverage --coverageReporters=html",
    "test:coverage:open": "open coverage/lcov-report/index.html",
    "test:e2e:dev": "cypress run --config baseUrl=http://localhost:3000",
    "test:e2e:headed": "cypress run --headed --config baseUrl=http://localhost:3000",
    "test:e2e:record": "cypress run --record --key YOUR_CYPRESS_KEY",
    "test:demo": "cypress run --spec 'cypress/e2e/first-demo.cy.ts'",
    "test:demo:open": "cypress open --config specPattern='cypress/e2e/first-demo.cy.ts'",
    "test:demo:comprehensive": "cypress run --spec 'cypress/e2e/comprehensive-demo-flow.cy.ts'",
    "test:demo:comprehensive:open": "cypress open --config specPattern='cypress/e2e/comprehensive-demo-flow.cy.ts'",
    "dev:clean": "rm -rf .next && npm run dev",
    "dev:reset": "rm -rf .next node_modules package-lock.json && npm install && npm run dev",
    "build:analyze": "ANALYZE=true npm run build",
    "build:clean": "rm -rf .next && npm run build",
    "start:prod": "npm run build && npm run start",
    "docker:build": "docker build -t nexus-experience .",
    "docker:run": "docker run -p 3000:3000 nexus-experience",
    "docker:dev": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    "clean": "rm -rf .next coverage node_modules/.cache",
    "clean:all": "rm -rf .next coverage node_modules package-lock.json && npm install",
    "setup": "npm install && npm run env:setup && npm run code-quality:fix",
    "setup:dev": "npm run setup && npm run dev",
    "ci": "npm run code-quality && npm run test:coverage && npm run test:e2e",
    "ci:quick": "npm run lint:check && npm run test:unit",
    "preview": "npm run build && npm run start",
    "deploy": "npm run build && echo 'üöÄ Ready for deployment!'",
    "deploy:vercel": "vercel --prod",
    "deploy:vercel:preview": "vercel",
    "health": "npm run env:check && npm run type-check && echo '‚úÖ All systems healthy!'",
    "health:full": "npm run health && npm run test:unit && echo '‚úÖ Full health check passed!'"
  },
  "lint-staged": {
    "src/**/*.{ts,tsx,js,jsx,json,css,scss}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "dependencies": {
    "@creit.tech/stellar-wallets-kit": "^1.8.0",
    "autoprefixer": "^10.0.1",
    "next": "14.0.4",
    "postcss": "^8",
    "react": "^18",
    "react-dom": "^18",
    "tailwindcss": "^3.3.0",
    "zod": "^4.1.5"
  },
  "devDependencies": {
    "@cypress/react": "^9.0.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "cypress": "^15.1.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jest": "^30.1.3",
    "jest-environment-jsdom": "^30.1.2",
    "lint-staged": "^16.1.6",
    "prettier": "^3.6.2",
    "typescript": "^5"
  }
}
